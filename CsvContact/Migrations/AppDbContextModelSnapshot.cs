// <auto-generated />
using System;
using CsvContact.Persitence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CsvContact.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CsvContact.Models.Contact", b =>
                {
                    b.Property<int>("IdContact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdContact")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Address");

                    b.Property<string>("CreditCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CsvFileModelIdFile")
                        .HasColumnType("int");

                    b.Property<string>("DateBirht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Franchise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdFile")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdContact");

                    b.HasIndex("CsvFileModelIdFile");

                    b.ToTable("Concatc");
                });

            modelBuilder.Entity("CsvContact.Models.CsvFile", b =>
                {
                    b.Property<int>("IdFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDFile")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmmountProcess")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FilePath");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("User");

                    b.HasKey("IdFile");

                    b.ToTable("CsvFiles", "dbo");
                });

            modelBuilder.Entity("CsvContact.Models.LogError", b =>
                {
                    b.Property<long>("IdError")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdError")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CsvFileModelIdFile")
                        .HasColumnType("int");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Error");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Field");

                    b.Property<long>("IdFile")
                        .HasColumnType("bigint");

                    b.HasKey("IdError");

                    b.HasIndex("CsvFileModelIdFile");

                    b.ToTable("LogError");
                });

            modelBuilder.Entity("CsvContact.Models.Contact", b =>
                {
                    b.HasOne("CsvContact.Models.CsvFile", "CsvFileModel")
                        .WithMany("ContactModels")
                        .HasForeignKey("CsvFileModelIdFile");

                    b.Navigation("CsvFileModel");
                });

            modelBuilder.Entity("CsvContact.Models.LogError", b =>
                {
                    b.HasOne("CsvContact.Models.CsvFile", "CsvFileModel")
                        .WithMany("LogErrorModels")
                        .HasForeignKey("CsvFileModelIdFile");

                    b.Navigation("CsvFileModel");
                });

            modelBuilder.Entity("CsvContact.Models.CsvFile", b =>
                {
                    b.Navigation("ContactModels");

                    b.Navigation("LogErrorModels");
                });
#pragma warning restore 612, 618
        }
    }
}
